#!/usr/bin/env bash

ROOT=$(realpath $(dirname "$(realpath -P "$0")"))

symlink() {
  local source="config/$1"
  local destination="$2"

  # Get the absolute path of the source
  target=$(realpath "$ROOT/$source")

  # If the destination is relative, prepend $HOME
  if [[ "$destination" == /* ]]; then
    link_name="$destination"
  else
    link_name="$HOME/.config/$destination"
  fi

  echo "Creating symlink: $link_name â†’ $target"

  # Remove directory
  rm -rf "$link_name"

  # Create the symlink
  ln -s "$target" "$link_name"
}

install_dnf_packages() {
  for pkg in $@; do
    if ! rpm -q "$pkg" >/dev/null 2>&1; then
      echo "Installing dnf package: $pkg"
      sudo dnf install -y "$pkg" >/dev/null 2>&1
    fi
  done
}

enable_copr_repos() {
  local repos=("$@")
  local enabled
  enabled=$(sudo dnf copr list | grep -v "(disabled)" | sed 's|copr.fedorainfracloud.org/||' | cut -d/ -f1,2)

  for repo in "${repos[@]}"; do
    if ! grep -Fxq "$repo" <<<"$enabled"; then
      echo "Enabling copr repository: $repo"
      sudo dnf -y copr enable "$repo" >/dev/null 2>&1
    fi
  done
}

install_bun_packages() {
  local pkg installed_dir
  installed_dir="$HOME/.bun/install/global/node_modules"

  for pkg in "$@"; do
    if [ ! -d "$installed_dir/$pkg" ]; then
      echo "Installing bun package: $pkg"
      bun add -g "$pkg" >/dev/null 2>&1
    fi
  done
}

install_nix_packages() {
  local installed
  installed=$(nix profile list --json | jq -r '.elements | keys[]')

  for pkg in "$@"; do
    if ! grep -qx "$pkg" <<<"$installed"; then
      echo "Installing nix package: $pkg"
      nix profile install "nixpkgs#$pkg" >/dev/null 2>&1
    fi
  done
}

install_flatpak_packages() {
  for pkg in "$@"; do
    if ! flatpak info "$pkg" >/dev/null 2>&1; then
      echo "Installing flatpak package: $pkg"
      flatpak install flathub -y --noninteractive "$pkg" >/dev/null 2>&1
    fi
  done
}

install_local_packages() {
  echo "$@" | jq -c 'to_entries[]' | while read -r entry; do
    key=$(echo "$entry" | jq -r '.key')
    val=$(echo "$entry" | jq -r '.value')
    echo "Running in $key"
    (cd "$ROOT/local/$key" && eval "$val")
  done
}
