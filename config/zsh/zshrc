unsetopt PROMPT_SP

# Performance optimizations
DISABLE_AUTO_UPDATE="true"
DISABLE_MAGIC_FUNCTIONS="true"
DISABLE_COMPFIX="true"

# Cache completions aggressively
autoload -Uz compinit
if [ "$(date +'%j')" != "$(stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)" ]; then
  compinit
else
  compinit -C
fi

PROMPT='%{$fg[green]%}%n@%m:%{$fg_bold[blue]%}%2~ $(git_prompt_info)%{$reset_color%}%(!.#.$) '
PROMPT='%{$fg[green]%}%n(%m) %{$fg_bold[blue]%}%2~ $(git_prompt_info)%{$fg[magenta]%}%(!.#.→)%{$reset_color%} '
ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg[red]%}‹"
ZSH_THEME_GIT_PROMPT_SUFFIX="›%{$reset_color%}"

source "$HOME/.oh-my-zsh/oh-my-zsh.sh"

precmd() { precmd() { echo "" } }
alias clear="precmd() { precmd() { echo } } && clear"

# General aliases
alias open="xdg-open"
alias sup='sudo -E'
alias zshr="source ~/.zshrc"
alias dl="aria2c -x 16 -s 16 --dir='$HOME/Downloads'"
alias c="clear"

# Text editor aliases
alias vi="hx"
alias vim="hx"
alias nano="hx"
alias shx="sup hx"
alias cat="bat"

# DNF aliases
alias dnfup="sudo dnf update -y"
alias dnfadd="sudo dnf -y install"
alias dnfdel="sudo dnf -y remove"

# Nix aliases
nixadd() { nix profile install nixpkgs#$1; }
alias nixdel="nix profile remove"

# Flatpak aliases
alias flatadd='flatpak install -y flathub'
alias flatdel='flatpak remove -y'

# Bun aliases
alias br='bun run'
alias bi='bun install'
alias badd='bun add'
alias bdel='bun remove'

# Docker aliases
alias dc="docker compose"
alias dcl="dc logs -f --tail=15"
alias dcu="dc up"
alias dcud="dc up -d"
alias dcd="dc down"
alias dcr="dc restart"
alias dcs="dc start"
alias dcss="dc stop"
alias compose="dc"
alias drm="docker container rm -f"
dsh() { docker exec -it $1 /bin/sh; }
dbash() { docker exec -it $1 /bin/bash; }

# Git aliases
alias gl='git pull'
alias gp='git push -u origin $(gb)'
alias gs='git status'
alias gb='git rev-parse --abbrev-ref HEAD'
alias gbl='git branch'
alias gco='git checkout'
alias gcb='git checkout -b'
alias gd='git diff'
alias ga='git add'
alias gall='git add .'
alias gc='git commit'
alias gcm='git commit -m'
alias gca="gall && gcm"
alias gcan='git commit --amend --no-edit'
alias gff="git add . && git commit --amend --no-edit && git push --force"

# File operations aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias cp="rsync -r --progress --partial --human-readable"
alias rmf="rm -rf"
alias mkd="mk -p"
mkcd() { mkdir -p $1 && cd $1; }
alias l="eza"
alias ls="eza"
alias ll="eza -l"
alias lll="eza -la"

# Tmux aliases
alias texit="tmux kill-session"
alias tquit="texit"
alias tx="texit"

# Compression and etraction
alias untar="tar -xvf"
alias zipit="zip -r"

export TERM=xterm
export VISUAL=hx
export EDITOR="$VISUAL"
export ELECTRON_OZONE_PLATFORM_HINT=wayland
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

export PATH="$HOME/Scripts/:$PATH"
export PATH="$HOME/.visualglitch91/scripts/:$PATH"
export PATH="$HOME/.local/bin/:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.bun/bin:$PATH"
export PATH="$HOME/.nix-profile/bin:$PATH"
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"

eval "$(starship init zsh)"

function current_dir() {
  local dir=$PWD
  if [[ $dir == "$HOME" ]]; then
    echo "~"
  else
    echo "${dir##*/}"
  fi
}

function change_tab_title() {
  local title=$1
  tmux rename-window -- "$title"
}

function set_tab_to_working_dir() {
  local result=$?
  local title
  title=$(current_dir)
  change_tab_title "$title"
}

function set_tab_to_command_line() {
  local cmdline=$1
  change_tab_title "$cmdline"
}

if [[ -n $TMUX ]]; then
  add-zsh-hook precmd set_tab_to_working_dir
  add-zsh-hook preexec set_tab_to_command_line
fi

if [[ $- =~ i ]] && [[ -z "$TMUX" ]] && [[ -n "$SSH_TTY" ]]; then
  tmux set -g default-shell $SHELL
  tmux attach-session -t ssh_tmux || tmux new-session -s ssh_tmux
  exit
fi
